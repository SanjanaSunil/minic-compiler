; ModuleID = 'MiniC'
source_filename = "MiniC"

@0 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@1 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@2 = private unnamed_addr constant [4 x i8] c"%d \00", align 1

declare i32 @printf(i8*, ...)

declare i32 @scanf(i8*, ...)

define i32 @main() {
entry:
  %n = alloca i32, align 4
  %scanf = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @0, i32 0, i32 0), i32* %n)
  %0 = load i32, i32* %n, align 4
  %arr = alloca i32, i32 %0, align 4
  %i = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %loopcond

loopcond:                                         ; preds = %loopbody, %entry
  %1 = load i32, i32* %i, align 4
  %2 = load i32, i32* %n, align 4
  %lt = icmp slt i32 %1, %2
  br i1 %lt, label %loopbody, label %outer

loopbody:                                         ; preds = %loopcond
  %3 = load i32, i32* %i, align 4
  %"arr$" = getelementptr inbounds i32, i32* %arr, i32 %3
  %scanf1 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1, i32 0, i32 0), i32* %"arr$")
  %4 = load i32, i32* %i, align 4
  %add = add i32 %4, 1
  store i32 %add, i32* %i, align 4
  br label %loopcond

outer:                                            ; preds = %loopcond
  %i2 = alloca i32, align 4
  store i32 1, i32* %i2, align 4
  br label %loopcond3

loopcond3:                                        ; preds = %outer14, %outer
  %5 = load i32, i32* %i2, align 4
  %6 = load i32, i32* %n, align 4
  %lt4 = icmp slt i32 %5, %6
  br i1 %lt4, label %loopbody5, label %outer18

loopbody5:                                        ; preds = %loopcond3
  %7 = load i32, i32* %i2, align 4
  %"arr$6" = getelementptr inbounds i32, i32* %arr, i32 %7
  %8 = load i32, i32* %"arr$6", align 4
  %val = alloca i32, align 4
  store i32 %8, i32* %val, align 4
  %9 = load i32, i32* %i2, align 4
  %sub = sub i32 %9, 1
  %j = alloca i32, align 4
  store i32 %sub, i32* %j, align 4
  br label %loopcond7

loopcond7:                                        ; preds = %loopbody9, %loopbody5
  %10 = load i32, i32* %j, align 4
  %ge = icmp sge i32 %10, 0
  %11 = load i32, i32* %j, align 4
  %"arr$8" = getelementptr inbounds i32, i32* %arr, i32 %11
  %12 = load i32, i32* %"arr$8", align 4
  %13 = load i32, i32* %val, align 4
  %gt = icmp sgt i32 %12, %13
  %and = and i1 %ge, %gt
  br i1 %and, label %loopbody9, label %outer14

loopbody9:                                        ; preds = %loopcond7
  %14 = load i32, i32* %j, align 4
  %"arr$10" = getelementptr inbounds i32, i32* %arr, i32 %14
  %15 = load i32, i32* %"arr$10", align 4
  %16 = load i32, i32* %j, align 4
  %add11 = add i32 %16, 1
  %"arr$12" = getelementptr inbounds i32, i32* %arr, i32 %add11
  store i32 %15, i32* %"arr$12", align 4
  %17 = load i32, i32* %j, align 4
  %sub13 = sub i32 %17, 1
  store i32 %sub13, i32* %j, align 4
  br label %loopcond7

outer14:                                          ; preds = %loopcond7
  %18 = load i32, i32* %val, align 4
  %19 = load i32, i32* %j, align 4
  %add15 = add i32 %19, 1
  %"arr$16" = getelementptr inbounds i32, i32* %arr, i32 %add15
  store i32 %18, i32* %"arr$16", align 4
  %20 = load i32, i32* %i2, align 4
  %add17 = add i32 %20, 1
  store i32 %add17, i32* %i2, align 4
  br label %loopcond3

outer18:                                          ; preds = %loopcond3
  %i19 = alloca i32, align 4
  store i32 0, i32* %i19, align 4
  br label %loopcond20

loopcond20:                                       ; preds = %loopbody22, %outer18
  %21 = load i32, i32* %i19, align 4
  %22 = load i32, i32* %n, align 4
  %lt21 = icmp slt i32 %21, %22
  br i1 %lt21, label %loopbody22, label %outer25

loopbody22:                                       ; preds = %loopcond20
  %23 = load i32, i32* %i19, align 4
  %"arr$23" = getelementptr inbounds i32, i32* %arr, i32 %23
  %24 = load i32, i32* %"arr$23", align 4
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @2, i32 0, i32 0), i32 %24)
  %25 = load i32, i32* %i19, align 4
  %add24 = add i32 %25, 1
  store i32 %add24, i32* %i19, align 4
  br label %loopcond20

outer25:                                          ; preds = %loopcond20
  ret i32 0
}
