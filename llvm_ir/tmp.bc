; ModuleID = 'MiniC'
source_filename = "MiniC"

@0 = private unnamed_addr constant [12 x i8] c"%d %d %d %d\00", align 1
@1 = private unnamed_addr constant [16 x i8] c"Cannot be added\00", align 1
@2 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@3 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@4 = private unnamed_addr constant [4 x i8] c" | \00", align 1
@5 = private unnamed_addr constant [4 x i8] c"%d \00", align 1

declare i32 @printf(i8*, ...)

declare i32 @scanf(i8*, ...)

define i32 @main() {
entry:
  %n1 = alloca i32, align 4
  %m1 = alloca i32, align 4
  %n2 = alloca i32, align 4
  %m2 = alloca i32, align 4
  %scanf = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0), i32* %n1, i32* %m1, i32* %n2, i32* %m2)
  %0 = load i32, i32* %n1, align 4
  %1 = load i32, i32* %n2, align 4
  %uneq = icmp ne i32 %0, %1
  %2 = load i32, i32* %m1, align 4
  %3 = load i32, i32* %m2, align 4
  %uneq1 = icmp ne i32 %2, %3
  %and = and i1 %uneq, %uneq1
  br i1 %and, label %then, label %ifcont

then:                                             ; preds = %entry
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @1, i32 0, i32 0))
  ret i32 0

ifcont:                                           ; preds = %entry
  %4 = load i32, i32* %n1, align 4
  %5 = load i32, i32* %m1, align 4
  %mul_tmp = mul i32 %5, %4
  %mat1 = alloca i32, i32 %mul_tmp, align 4
  %6 = load i32, i32* %n2, align 4
  %7 = load i32, i32* %m2, align 4
  %mul_tmp2 = mul i32 %7, %6
  %mat2 = alloca i32, i32 %mul_tmp2, align 4
  %i = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %loopcond

loopcond:                                         ; preds = %outer, %ifcont
  %8 = load i32, i32* %i, align 4
  %9 = load i32, i32* %n1, align 4
  %lt = icmp slt i32 %8, %9
  br i1 %lt, label %loopbody, label %outer9

loopbody:                                         ; preds = %loopcond
  %j = alloca i32, align 4
  store i32 0, i32* %j, align 4
  br label %loopcond3

loopcond3:                                        ; preds = %loopbody5, %loopbody
  %10 = load i32, i32* %j, align 4
  %11 = load i32, i32* %m1, align 4
  %lt4 = icmp slt i32 %10, %11
  br i1 %lt4, label %loopbody5, label %outer

loopbody5:                                        ; preds = %loopcond3
  %12 = load i32, i32* %i, align 4
  %13 = load i32, i32* %j, align 4
  %mul_tmp6 = mul i32 %5, %12
  %add_tmp = add i32 %13, %mul_tmp6
  %"mat1$" = getelementptr inbounds i32, i32* %mat1, i32 %add_tmp
  %scanf7 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @2, i32 0, i32 0), i32* %"mat1$")
  %14 = load i32, i32* %j, align 4
  %add = add i32 %14, 1
  store i32 %add, i32* %j, align 4
  br label %loopcond3

outer:                                            ; preds = %loopcond3
  %15 = load i32, i32* %i, align 4
  %add8 = add i32 %15, 1
  store i32 %add8, i32* %i, align 4
  br label %loopcond

outer9:                                           ; preds = %loopcond
  %i10 = alloca i32, align 4
  store i32 0, i32* %i10, align 4
  br label %loopcond11

loopcond11:                                       ; preds = %outer22, %outer9
  %16 = load i32, i32* %i10, align 4
  %17 = load i32, i32* %n2, align 4
  %lt12 = icmp slt i32 %16, %17
  br i1 %lt12, label %loopbody13, label %outer24

loopbody13:                                       ; preds = %loopcond11
  %j14 = alloca i32, align 4
  store i32 0, i32* %j14, align 4
  br label %loopcond15

loopcond15:                                       ; preds = %loopbody17, %loopbody13
  %18 = load i32, i32* %j14, align 4
  %19 = load i32, i32* %m2, align 4
  %lt16 = icmp slt i32 %18, %19
  br i1 %lt16, label %loopbody17, label %outer22

loopbody17:                                       ; preds = %loopcond15
  %20 = load i32, i32* %i10, align 4
  %21 = load i32, i32* %j14, align 4
  %mul_tmp18 = mul i32 %7, %20
  %add_tmp19 = add i32 %21, %mul_tmp18
  %"mat2$" = getelementptr inbounds i32, i32* %mat2, i32 %add_tmp19
  %scanf20 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @3, i32 0, i32 0), i32* %"mat2$")
  %22 = load i32, i32* %j14, align 4
  %add21 = add i32 %22, 1
  store i32 %add21, i32* %j14, align 4
  br label %loopcond15

outer22:                                          ; preds = %loopcond15
  %23 = load i32, i32* %i10, align 4
  %add23 = add i32 %23, 1
  store i32 %add23, i32* %i10, align 4
  br label %loopcond11

outer24:                                          ; preds = %loopcond11
  %i25 = alloca i32, align 4
  store i32 0, i32* %i25, align 4
  br label %loopcond26

loopcond26:                                       ; preds = %outer49, %outer24
  %24 = load i32, i32* %i25, align 4
  %25 = load i32, i32* %n1, align 4
  %lt27 = icmp slt i32 %24, %25
  br i1 %lt27, label %loopbody28, label %outer51

loopbody28:                                       ; preds = %loopcond26
  %printf29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @4, i32 0, i32 0))
  %j30 = alloca i32, align 4
  store i32 0, i32* %j30, align 4
  br label %loopcond31

loopcond31:                                       ; preds = %loopbody33, %loopbody28
  %26 = load i32, i32* %j30, align 4
  %27 = load i32, i32* %m1, align 4
  %lt32 = icmp slt i32 %26, %27
  br i1 %lt32, label %loopbody33, label %outer49

loopbody33:                                       ; preds = %loopcond31
  %28 = load i32, i32* %i25, align 4
  %29 = load i32, i32* %j30, align 4
  %mul_tmp34 = mul i32 %5, %28
  %add_tmp35 = add i32 %29, %mul_tmp34
  %"mat1$36" = getelementptr inbounds i32, i32* %mat1, i32 %add_tmp35
  %30 = load i32, i32* %"mat1$36", align 4
  %31 = load i32, i32* %i25, align 4
  %32 = load i32, i32* %j30, align 4
  %mul_tmp37 = mul i32 %7, %31
  %add_tmp38 = add i32 %32, %mul_tmp37
  %"mat2$39" = getelementptr inbounds i32, i32* %mat2, i32 %add_tmp38
  %33 = load i32, i32* %"mat2$39", align 4
  %add40 = add i32 %30, %33
  %34 = load i32, i32* %i25, align 4
  %35 = load i32, i32* %j30, align 4
  %mul_tmp41 = mul i32 %5, %34
  %add_tmp42 = add i32 %35, %mul_tmp41
  %"mat1$43" = getelementptr inbounds i32, i32* %mat1, i32 %add_tmp42
  store i32 %add40, i32* %"mat1$43", align 4
  %36 = load i32, i32* %i25, align 4
  %37 = load i32, i32* %j30, align 4
  %mul_tmp44 = mul i32 %5, %36
  %add_tmp45 = add i32 %37, %mul_tmp44
  %"mat1$46" = getelementptr inbounds i32, i32* %mat1, i32 %add_tmp45
  %38 = load i32, i32* %"mat1$46", align 4
  %printf47 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @5, i32 0, i32 0), i32 %38)
  %39 = load i32, i32* %j30, align 4
  %add48 = add i32 %39, 1
  store i32 %add48, i32* %j30, align 4
  br label %loopcond31

outer49:                                          ; preds = %loopcond31
  %40 = load i32, i32* %i25, align 4
  %add50 = add i32 %40, 1
  store i32 %add50, i32* %i25, align 4
  br label %loopcond26

outer51:                                          ; preds = %loopcond26
  ret i32 0
}
