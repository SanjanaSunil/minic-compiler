; ModuleID = 'MiniC'
source_filename = "MiniC"

@0 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@1 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@2 = private unnamed_addr constant [4 x i8] c"%d \00", align 1

declare i32 @printf(i8*, ...)

declare i32 @scanf(i8*, ...)

define i32 @numberOfDigits(i32 %n) {
entry:
  %n1 = alloca i32, align 4
  store i32 %n, i32* %n1, align 4
  %0 = load i32, i32* %n1, align 4
  %eq = icmp eq i32 %0, 0
  br i1 %eq, label %then, label %ifcont

then:                                             ; preds = %entry
  ret i32 1

ifcont:                                           ; preds = %entry
  %digits = alloca i32, align 4
  store i32 0, i32* %digits, align 4
  br label %loopcond

loopcond:                                         ; preds = %loopbody, %ifcont
  %1 = load i32, i32* %n1, align 4
  %gt = icmp sgt i32 %1, 0
  br i1 %gt, label %loopbody, label %outer

loopbody:                                         ; preds = %loopcond
  %2 = load i32, i32* %digits, align 4
  %add = add i32 %2, 1
  store i32 %add, i32* %digits, align 4
  %3 = load i32, i32* %n1, align 4
  %div = sdiv i32 %3, 10
  store i32 %div, i32* %n1, align 4
  br label %loopcond

outer:                                            ; preds = %loopcond
  %4 = load i32, i32* %digits, align 4
  ret i32 %4
}

define i32 @main() {
entry:
  %n = alloca i32, align 4
  %scanf = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @0, i32 0, i32 0), i32* %n)
  %0 = load i32, i32* %n, align 4
  %arr = alloca i32, i32 %0, align 4
  %1 = load i32, i32* %n, align 4
  %final = alloca i32, i32 %1, align 4
  %i = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %loopcond

loopcond:                                         ; preds = %loopbody, %entry
  %2 = load i32, i32* %i, align 4
  %3 = load i32, i32* %n, align 4
  %lt = icmp slt i32 %2, %3
  br i1 %lt, label %loopbody, label %outer

loopbody:                                         ; preds = %loopcond
  %4 = load i32, i32* %i, align 4
  %"arr$" = getelementptr inbounds i32, i32* %arr, i32 %4
  %scanf1 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1, i32 0, i32 0), i32* %"arr$")
  %5 = load i32, i32* %i, align 4
  %add = add i32 %5, 1
  store i32 %add, i32* %i, align 4
  br label %loopcond

outer:                                            ; preds = %loopcond
  %maxDigits = alloca i32, align 4
  store i32 0, i32* %maxDigits, align 4
  %i2 = alloca i32, align 4
  store i32 0, i32* %i2, align 4
  br label %loopcond3

loopcond3:                                        ; preds = %ifcont, %outer
  %6 = load i32, i32* %i2, align 4
  %7 = load i32, i32* %n, align 4
  %lt4 = icmp slt i32 %6, %7
  br i1 %lt4, label %loopbody5, label %outer8

loopbody5:                                        ; preds = %loopcond3
  %8 = load i32, i32* %i2, align 4
  %"arr$6" = getelementptr inbounds i32, i32* %arr, i32 %8
  %9 = load i32, i32* %"arr$6", align 4
  %numberOfDigits = call i32 @numberOfDigits(i32 %9)
  %digits = alloca i32, align 4
  store i32 %numberOfDigits, i32* %digits, align 4
  %10 = load i32, i32* %digits, align 4
  %11 = load i32, i32* %maxDigits, align 4
  %gt = icmp sgt i32 %10, %11
  br i1 %gt, label %then, label %ifcont

then:                                             ; preds = %loopbody5
  %12 = load i32, i32* %digits, align 4
  store i32 %12, i32* %maxDigits, align 4
  br label %ifcont

ifcont:                                           ; preds = %then, %loopbody5
  %13 = load i32, i32* %i2, align 4
  %add7 = add i32 %13, 1
  store i32 %add7, i32* %i2, align 4
  br label %loopcond3

outer8:                                           ; preds = %loopcond3
  %pow = alloca i32, align 4
  store i32 1, i32* %pow, align 4
  %i9 = alloca i32, align 4
  store i32 1, i32* %i9, align 4
  br label %loopcond10

loopcond10:                                       ; preds = %outer68, %outer8
  %14 = load i32, i32* %i9, align 4
  %15 = load i32, i32* %maxDigits, align 4
  %le = icmp sle i32 %14, %15
  br i1 %le, label %loopbody11, label %outer70

loopbody11:                                       ; preds = %loopcond10
  %cnt = alloca i32, i32 10, align 4
  %j = alloca i32, align 4
  store i32 0, i32* %j, align 4
  br label %loopcond12

loopcond12:                                       ; preds = %loopbody14, %loopbody11
  %16 = load i32, i32* %j, align 4
  %lt13 = icmp slt i32 %16, 10
  br i1 %lt13, label %loopbody14, label %outer16

loopbody14:                                       ; preds = %loopcond12
  %17 = load i32, i32* %j, align 4
  %"cnt$" = getelementptr inbounds i32, i32* %cnt, i32 %17
  store i32 0, i32* %"cnt$", align 4
  %18 = load i32, i32* %j, align 4
  %add15 = add i32 %18, 1
  store i32 %add15, i32* %j, align 4
  br label %loopcond12

outer16:                                          ; preds = %loopcond12
  %j17 = alloca i32, align 4
  store i32 0, i32* %j17, align 4
  br label %loopcond18

loopcond18:                                       ; preds = %loopbody20, %outer16
  %19 = load i32, i32* %j17, align 4
  %20 = load i32, i32* %n, align 4
  %lt19 = icmp slt i32 %19, %20
  br i1 %lt19, label %loopbody20, label %outer29

loopbody20:                                       ; preds = %loopcond18
  %21 = load i32, i32* %j17, align 4
  %"arr$21" = getelementptr inbounds i32, i32* %arr, i32 %21
  %22 = load i32, i32* %"arr$21", align 4
  %23 = load i32, i32* %pow, align 4
  %div = sdiv i32 %22, %23
  %mod = srem i32 %div, 10
  %"cnt$22" = getelementptr inbounds i32, i32* %cnt, i32 %mod
  %24 = load i32, i32* %"cnt$22", align 4
  %add23 = add i32 %24, 1
  %25 = load i32, i32* %j17, align 4
  %"arr$24" = getelementptr inbounds i32, i32* %arr, i32 %25
  %26 = load i32, i32* %"arr$24", align 4
  %27 = load i32, i32* %pow, align 4
  %div25 = sdiv i32 %26, %27
  %mod26 = srem i32 %div25, 10
  %"cnt$27" = getelementptr inbounds i32, i32* %cnt, i32 %mod26
  store i32 %add23, i32* %"cnt$27", align 4
  %28 = load i32, i32* %j17, align 4
  %add28 = add i32 %28, 1
  store i32 %add28, i32* %j17, align 4
  br label %loopcond18

outer29:                                          ; preds = %loopcond18
  %j30 = alloca i32, align 4
  store i32 1, i32* %j30, align 4
  br label %loopcond31

loopcond31:                                       ; preds = %loopbody33, %outer29
  %29 = load i32, i32* %j30, align 4
  %lt32 = icmp slt i32 %29, 10
  br i1 %lt32, label %loopbody33, label %outer39

loopbody33:                                       ; preds = %loopcond31
  %30 = load i32, i32* %j30, align 4
  %"cnt$34" = getelementptr inbounds i32, i32* %cnt, i32 %30
  %31 = load i32, i32* %"cnt$34", align 4
  %32 = load i32, i32* %j30, align 4
  %sub = sub i32 %32, 1
  %"cnt$35" = getelementptr inbounds i32, i32* %cnt, i32 %sub
  %33 = load i32, i32* %"cnt$35", align 4
  %add36 = add i32 %31, %33
  %34 = load i32, i32* %j30, align 4
  %"cnt$37" = getelementptr inbounds i32, i32* %cnt, i32 %34
  store i32 %add36, i32* %"cnt$37", align 4
  %35 = load i32, i32* %j30, align 4
  %add38 = add i32 %35, 1
  store i32 %add38, i32* %j30, align 4
  br label %loopcond31

outer39:                                          ; preds = %loopcond31
  %36 = load i32, i32* %n, align 4
  %sub40 = sub i32 %36, 1
  %j41 = alloca i32, align 4
  store i32 %sub40, i32* %j41, align 4
  br label %loopcond42

loopcond42:                                       ; preds = %loopbody43, %outer39
  %37 = load i32, i32* %j41, align 4
  %ge = icmp sge i32 %37, 0
  br i1 %ge, label %loopbody43, label %outer60

loopbody43:                                       ; preds = %loopcond42
  %38 = load i32, i32* %j41, align 4
  %"arr$44" = getelementptr inbounds i32, i32* %arr, i32 %38
  %39 = load i32, i32* %"arr$44", align 4
  %40 = load i32, i32* %j41, align 4
  %"arr$45" = getelementptr inbounds i32, i32* %arr, i32 %40
  %41 = load i32, i32* %"arr$45", align 4
  %42 = load i32, i32* %pow, align 4
  %div46 = sdiv i32 %41, %42
  %mod47 = srem i32 %div46, 10
  %"cnt$48" = getelementptr inbounds i32, i32* %cnt, i32 %mod47
  %43 = load i32, i32* %"cnt$48", align 4
  %sub49 = sub i32 %43, 1
  %"final$" = getelementptr inbounds i32, i32* %final, i32 %sub49
  store i32 %39, i32* %"final$", align 4
  %44 = load i32, i32* %j41, align 4
  %"arr$50" = getelementptr inbounds i32, i32* %arr, i32 %44
  %45 = load i32, i32* %"arr$50", align 4
  %46 = load i32, i32* %pow, align 4
  %div51 = sdiv i32 %45, %46
  %mod52 = srem i32 %div51, 10
  %"cnt$53" = getelementptr inbounds i32, i32* %cnt, i32 %mod52
  %47 = load i32, i32* %"cnt$53", align 4
  %sub54 = sub i32 %47, 1
  %48 = load i32, i32* %j41, align 4
  %"arr$55" = getelementptr inbounds i32, i32* %arr, i32 %48
  %49 = load i32, i32* %"arr$55", align 4
  %50 = load i32, i32* %pow, align 4
  %div56 = sdiv i32 %49, %50
  %mod57 = srem i32 %div56, 10
  %"cnt$58" = getelementptr inbounds i32, i32* %cnt, i32 %mod57
  store i32 %sub54, i32* %"cnt$58", align 4
  %51 = load i32, i32* %j41, align 4
  %sub59 = sub i32 %51, 1
  store i32 %sub59, i32* %j41, align 4
  br label %loopcond42

outer60:                                          ; preds = %loopcond42
  %j61 = alloca i32, align 4
  store i32 0, i32* %j61, align 4
  br label %loopcond62

loopcond62:                                       ; preds = %loopbody64, %outer60
  %52 = load i32, i32* %j61, align 4
  %53 = load i32, i32* %n, align 4
  %lt63 = icmp slt i32 %52, %53
  br i1 %lt63, label %loopbody64, label %outer68

loopbody64:                                       ; preds = %loopcond62
  %54 = load i32, i32* %j61, align 4
  %"final$65" = getelementptr inbounds i32, i32* %final, i32 %54
  %55 = load i32, i32* %"final$65", align 4
  %56 = load i32, i32* %j61, align 4
  %"arr$66" = getelementptr inbounds i32, i32* %arr, i32 %56
  store i32 %55, i32* %"arr$66", align 4
  %57 = load i32, i32* %j61, align 4
  %add67 = add i32 %57, 1
  store i32 %add67, i32* %j61, align 4
  br label %loopcond62

outer68:                                          ; preds = %loopcond62
  %58 = load i32, i32* %pow, align 4
  %mul = mul i32 %58, 10
  store i32 %mul, i32* %pow, align 4
  %59 = load i32, i32* %i9, align 4
  %add69 = add i32 %59, 1
  store i32 %add69, i32* %i9, align 4
  br label %loopcond10

outer70:                                          ; preds = %loopcond10
  %i71 = alloca i32, align 4
  store i32 0, i32* %i71, align 4
  br label %loopcond72

loopcond72:                                       ; preds = %loopbody74, %outer70
  %60 = load i32, i32* %i71, align 4
  %61 = load i32, i32* %n, align 4
  %lt73 = icmp slt i32 %60, %61
  br i1 %lt73, label %loopbody74, label %outer77

loopbody74:                                       ; preds = %loopcond72
  %62 = load i32, i32* %i71, align 4
  %"arr$75" = getelementptr inbounds i32, i32* %arr, i32 %62
  %63 = load i32, i32* %"arr$75", align 4
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @2, i32 0, i32 0), i32 %63)
  %64 = load i32, i32* %i71, align 4
  %add76 = add i32 %64, 1
  store i32 %add76, i32* %i71, align 4
  br label %loopcond72

outer77:                                          ; preds = %loopcond72
  ret i32 0
}
