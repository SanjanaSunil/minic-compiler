; ModuleID = 'MiniC'
source_filename = "MiniC"

@0 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@1 = private unnamed_addr constant [3 x i8] c"%d\00", align 1

declare i32 @printf(i8*, ...)

declare i32 @scanf(i8*, ...)

define i32 @main() {
entry:
  %arr = alloca i32, i32 20, align 4
  %"arr$" = getelementptr inbounds i32, i32* %arr, i32 0
  store i32 5, i32* %"arr$", align 4
  %x = alloca i32, align 4
  store i32 2, i32* %x, align 4
  %scanf = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @0, i32 0, i32 0), i32* %x)
  %0 = load i32, i32* %x, align 4
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1, i32 0, i32 0), i32 %0)
  ret i32 0
}
