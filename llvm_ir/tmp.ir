; ModuleID = 'MiniC'
source_filename = "MiniC"

@a = private global float 0x3FF19999A0000000
@0 = private unnamed_addr constant [13 x i8] c"\22%f %c skfj\22\00", align 1

declare i32 @printf(i8*, ...)

define void @trial(i32 %r) {
entry:
  %r1 = alloca i32, align 4
  store i32 %r, i32* %r1, align 4
  ret void
}

define i32 @main() {
entry:
  br i1 true, label %then, label %ifcont

then:                                             ; preds = %entry
  %x = alloca float, align 4
  store float 0x4000CCCCC0000000, float* %x, align 4
  %c = alloca i8, align 1
  store i8 100, i8* %c, align 1
  %0 = load float, float* %x, align 4
  %1 = load i8, i8* %c, align 1
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @0, i32 0, i32 0), float %0, i8 %1)
  ret i32 0

ifcont:                                           ; preds = %entry
  %iftmp = phi i32 [ 0, %then ]
  ret i32 0
}
