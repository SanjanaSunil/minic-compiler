; ModuleID = 'MiniC'
source_filename = "MiniC"

@a = private global float 0x3FF19999A0000000
@0 = private unnamed_addr constant [5 x i8] c"\22YO\22\00", align 1
@1 = private unnamed_addr constant [8 x i8] c"\22sdfjn\22\00", align 1

declare i32 @puts(i8*)

define void @trial(i32 %r) {
entry:
  %r1 = alloca i32, align 4
  store i32 %r, i32* %r1, align 4
  ret void
}

define i32 @main() {
entry:
  br i1 false, label %then, label %else

then:                                             ; preds = %entry
  %puts = call i32 @puts(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0))
  br label %ifcont

else:                                             ; preds = %entry
  %puts1 = call i32 @puts(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1, i32 0, i32 0))
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %iftmp = phi i32 [ %puts, %then ], [ %puts1, %else ]
  ret i32 1
}
